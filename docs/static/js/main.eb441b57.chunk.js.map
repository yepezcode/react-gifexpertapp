{"version":3,"sources":["components/AddCategories.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAIZC,mBAAS,IAJG,mBAIzCC,EAJyC,KAI7BC,EAJ6B,KAmBhD,OACI,mCACI,sBAAMC,SAXO,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,e,+BCTnBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAChBC,EADgB,0FACyEC,UAC7FH,GAFoB,sBAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXhB,kBAefM,GAfe,4CAAH,sDCERO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCZ,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAmBzC,OAZAC,qBAAU,WAENxB,EAAUC,GACLwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDlB2BK,CAAe1B,GAAnCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,sBAAKJ,UAAU,6CAAf,UAEI,mCAAOhB,EAAP,OACA,sBAAKgB,UAAU,YAAf,UAEMI,GAAW,6CAETP,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGOA,GAFGA,EAAIC,cEdzBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,kBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAeA,cAAgBA,IAC/B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCdlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb441b57.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategories = ({ setCategories }) => {\n    \n  \n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) { \n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={ handleSubmit }>\n                <input\n                    type=\"text\"\n                    value={ inputValue }\n                    onChange= { handleInputChange }\n                />\n           </form>\n        </>\n    )\n}\n\nAddCategories.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifts = async ( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=tL4r24z1aSviJ2JXQNNa291wFKfOn8y7&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifts = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifts;\n};\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__backInLeft\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifts } from '../hooks/useFetchGifts';\nimport { GifGridItem } from './GifGridItem'\nexport const GifGrid = ({ category }) => {\n    \n    const { data: images, loading } = useFetchGifts( category );\n\n    return (\n        <div className=\"card animate__animated animate__backInLeft\" >\n           \n            <h3> { category } </h3>\n            <div className=\"card-grid\">                    \n                \n                { loading && <p> Loading... </p> }\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={ img.id }\n                            {\n                            ...img\n                            }\n                        />\n                    ))\n                }\n            </div>\n     </div>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\";\n\n\nexport const useFetchGifts = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n    \n    useEffect(() => {\n\n        getGifts( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n        \n    }, [ category ])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategories } from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch man']);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'HunterXHunter']);\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategories setCategories={ setCategories } />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}